using MediatR;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using {{ applicationNamespace }}.Interfaces;


namespace {{ applicationNamespace }}.Features;

public class {{ namePascalCase }}
{
    public class Request : IRequest<Response> { }

    public class Response
    {
        public List<{{ entityNamePascalCase }}Dto> {{ entityNamePascalCasePlural }} { get; set; }
    }

    public class Handler : IRequestHandler<Request, Response>
    {
        private readonly I{{ dbContextPascalCase }} _context;

        public Handler(I{{ dbContextPascalCase }} context){
            _context = context;
        }

        public async Task<Response> Handle(Request request, CancellationToken cancellationToken) {
                {{ entityNamePascalCasePlural }} = _context.{{ entityNamePascalCasePlural }}.Select(x => x.ToDto()).ToList()
            };
        }
    }
}
