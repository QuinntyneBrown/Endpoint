using CommandLine;
using MediatR;
using System;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.Extensions.Logging;


namespace {{ namespace }};


[Verb("{{ nameSnakeCase }}")]
public class {{ namePascalCase }}Request : IRequest {
    [Option('n',"name")]
    public string Name { get; set; }


    [Option('d', Required = false)]
    public string Directory { get; set; } = System.Environment.CurrentDirectory;
}

public class {{ namePascalCase }}RequestHandler : IRequestHandler<{{ namePascalCase }}Request>
{
    private readonly ILogger<{{ namePascalCase }}RequestHandler> _logger;

    public {{ namePascalCase }}RequestHandler(ILogger<{{ namePascalCase }}RequestHandler> logger)
    {
        _logger = logger ?? throw new ArgumentNullException(nameof(logger));
    }

    public async Task<Unit> Handle({{ namePascalCase }}Request request, CancellationToken cancellationToken)
    {
        _logger.LogInformation("Handled: {0}", nameof({{ namePascalCase }}RequestHandler));

        return new();
    }
}