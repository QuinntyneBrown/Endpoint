import { Injectable } from '@angular/core';
import { HubConnection, HubConnectionBuilder, IHttpConnectionOptions } from '@microsoft/signalr';
import { from, Observable, Subject } from 'rxjs';


@Injectable({
  providedIn: 'root'
})
export class {{ namePascalCase }}HubClientService {

  private _connect$: Observable<void> | undefined;

  static create(baseUrl:string): {{ namePascalCase }}HubClientService {

    const options: IHttpConnectionOptions = {                    
      logMessageContent: true               
    };

    var hubConnection = new HubConnectionBuilder()
    .withUrl(`${baseUrl}hub`, options)
    .withAutomaticReconnect()
    .build(); 

    return new {{ namePascalCase }}HubClientService(hubConnection);
  }

  constructor(private readonly _hubConnection: HubConnection) { }

  public message$ = new Subject<string>();

  public connect$(): Observable<void> {
    
    if(this._connect$) return this._connect$;

    this._hubConnection.on("message", (message:string) => {
      this.message$.next(message);
    });

    this._connect$ = from(this._hubConnection.start());

    return this._connect$;
  }
}